	/* Thread Security Z axis */
	pthread_data_Axis = (StructAxisPtr)calloc(1, sizeof(StructAxis));
	EXCCHECK( gs_paxiss->GetaxisByIndex(gs_paxiss, 2, &(pthread_data_Axis->paxis_station_40)));
	EXCCHECK( gs_paxiss->GetaxisByIndex(gs_paxiss, 3, &(pthread_data_Axis->paxis_station_50)));

	Run_Axis = 1;

	CmtScheduleThreadPoolFunction (DEFAULT_THREAD_POOL_HANDLE, Thread_Axis, (void*)pthread_data_Axis, &thread_Id_Axis);
	
	
	
	
	
	
	/*---------------------------------------------------------------------------*/
#undef __FUNC__
#define __FUNC__ "Thread_Axis"
int CVICALLBACK Thread_Axis (void *functionData)
{
	StructAxisPtr pthread_data_Axis = (StructAxisPtr)functionData;
	
	while (Run_Axis == 1)
    {

		Sleep(1);
		
		if (data_Analog[1] > 10.0)
		{
			//printf ("STOP : paxis_right_station_30 \r\n");
			pthread_data_Axis->paxis_station_40->StopAxis(pthread_data_Axis->paxis_station_40, AXIS_Z);
		}
		
		if (data_Analog[2] > 10.0)
		{
			//printf ("STOP : paxis_right_station_30 \r\n");
			pthread_data_Axis->paxis_station_50->StopAxis(pthread_data_Axis->paxis_station_50, AXIS_Z);
		}
	
	}

    return 0;
}
