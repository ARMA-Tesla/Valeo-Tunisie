#include "C:\Program Files (x86)\National Instruments\Shared\MSDTRedistributables\SDKHeaderFiles\8.1\winver.h"


2 24 "c:\\work\\elcom\\valeo\\UTSystem\\src\\modules\\automat\\cvibuild.automat\\Debug\\manifest.xml"


STRINGTABLE DISCARDABLE
BEGIN
  65535  ""
END

VS_VERSION_INFO VERSIONINFO
 FILEVERSION 1,0,0,0
 PRODUCTVERSION 1,0,0,0
 FILEFLAGSMASK VS_FFI_FILEFLAGSMASK
 FILEFLAGS 0x1L
 FILEOS VOS__WINDOWS32
 FILETYPE VFT_DLL
 FILESUBTYPE VFT_UNKNOWN
BEGIN
    BLOCK "StringFileInfo"
    BEGIN
        BLOCK "040904b0"
        BEGIN
            VALUE "CompanyName", "\0"
            VALUE "FileDescription", "automat (Debug x86)\0"
            VALUE "FileVersion", "1.0\0"
            VALUE "InternalName", "automat\0"
            VALUE "LegalCopyright", "Copyright ©  2021\0"
            VALUE "OriginalFilename", "automat.dll\0"
            VALUE "ProductName", " automat\0"
            VALUE "ProductVersion", "1.0\0"
        END
    END
    BLOCK "VarFileInfo"
    BEGIN
        VALUE "Translation", 0x409, 0x4b0
    END
END

automat.uir UIRFileType "c:\\work\\elcom\\valeo\\UTSystem\\src\\modules\\automat\\automat.uir"

CVIDLLexports CVIDLLprototypes
{
   "struct _SElException *CameraCheckJob(char *job_database);"
   "\n",
   "struct _SElException *CameraCheckJob_X52(struct _Cameras *pcameras);"
   "\n",
   "struct _SElException *CameraConnect(struct _Cameras *pcameras, int index);"
   "\n",
   "struct _SElException *CameraGetdata(struct _Cameras *pcameras, int step, int timeout, char *data);"
   "\n",
   "struct _SElException *CameraGetdataVS11(struct _Cameras *pcameras, int step, int timeout, char *data);"
   "\n",
   "struct _SElException *CameraGetdataX52_7(struct _Cameras *pcameras, int step, int timeout, char *data);"
   "\n",
   "struct _SElException *CameraGetdataX52_9(struct _Cameras *pcameras, int step, int timeout, char *data);"
   "\n",
   "struct _SElException *CameraSetJob(struct _STestParam *ppar, struct _Cameras *pcameras, int index);"
   "\n",
   "struct _SElException *CameraSetNubrBouton(struct _Cameras *pcameras, int type, int timeout);"
   "\n",
   "struct _SElException *CameraSetParam(struct _Cameras *pcameras, int step, int timeout);"
   "\n",
   "void CheckDirectory(const char *directory);"
   "\n",
   "struct _SElException *CheckLimitINT32(struct _STestParam *ppar, int step, int index, int value);"
   "\n",
   "struct _SElException *CheckLimitREAL64(struct _STestParam *ppar, int step, int index, double value);"
   "\n",
   "struct _SElException *CheckLimitSTRING(struct _STestParam *ppar, int step, int index, char *value);"
   "\n",
   "struct _SElException *CheckLimitUINT32(struct _STestParam *ppar, int step, int index, unsigned int value);"
   "\n",
   "struct _SElException *CompareXML(char *barcode_Master, CAObjHandle pxml, char *Error);"
   "\n",
   "struct _SElException *CreateNewLimit(struct _STestParam *ppar, int step, int index, char *limit_str, const char *description);"
   "\n",
   "struct _SElException *CreateNewLimitEx(struct _STestParam *ppar, int step, int index, char *min, char *max, const char *description);"
   "\n",
   "void CyclePrintStatus(int StatusOnline, int Interpreter);"
   "\n",
   "void DiscardUIObjectsForDLL();"
   "\n",
   "struct _SElException *DisplayWait();"
   "\n",
   "int DllEntryPoint(struct HINSTANCE__ *hinstDLL, unsigned long fdwReason, void *lpvReserved);"
   "\n",
   "int DllMain(struct HINSTANCE__ *hinstDLL, unsigned long fdwReason, void *lpvReserved);"
   "\n",
   "struct _SElException *Fill_CSV_Mesures_Label(CAObjHandle pxml, int pfile_csv, int Station);"
   "\n",
   "struct _SElException *Fill_CSV_Steps_Label(CAObjHandle pxml, int pfile_csv, int Station);"
   "\n",
   "struct _SElException *GetLimitConfiguration(struct _STestParam *ppar, int step, int index, char buffer[], int bufferSize);"
   "\n",
   "struct _SElException *GetNewSerial(int *counter, int *pError);"
   "\n",
   "struct _SElException *GetResultREAL64formXMLString(struct _SELString *result, const char *path, double *value);"
   "\n",
   "struct _SElException *GetResultSTRINGformXMLString(struct _SELString *result, const char *path, char *buffer);"
   "\n",
   "struct _SElException *GetSubTest(struct _STestParam *ppar, int step, char *subtest);"
   "\n",
   "struct _SElException *GetTestDescription(struct _STestParam *ppar, int step, char *desc, unsigned int descSize);"
   "\n",
   "struct _SElException *GetTestResult(struct _STestParam *ppar, int *result);"
   "\n",
   "struct _SElException *GetTestSequenceBarcode(struct _STestParam *ppar, char *barcode, unsigned int barcode_size);"
   "\n",
   "struct _SElException *JigPanelLabel(struct _SSledge *me, int *pError);"
   "\n",
   "struct _SElException *JigPanelLabel2(struct _SSledge *me, int *pError);"
   "\n",
   "struct _SElException *JigPanelLabelFail(struct _SSledge *me, int *pError);"
   "\n",
   "struct _SElException *JigPanelReadBarcodeOK(struct _SSledge *me, int *pError);"
   "\n",
   "int LimitExist(struct _STestParam *ppar, int step, int index);"
   "\n",
   "struct _SElException *LoadCameraPictos();"
   "\n",
   "struct _SElException *LoadJobCamera(int Index, char *job);"
   "\n",
   "struct _SElException *LoadJobCamera2(struct _Cameras *pcameras, char *job);"
   "\n",
   "struct _SElException *LoadPanelExWithLanguage(int parentPanel, const char *path, int panelResourceId, struct _SLanguageItem table[], int *pPanelHandle);"
   "\n",
   "struct _SElException *LoadPanelWithLanguage(int parentPanel, const char *path, int panelResourceId, struct _SLanguageItem table[], int *pPanelHandle);"
   "\n",
   "struct _SElException *LoadTestSequence(const char *fileXml, struct _STestSequence *pTestSeq, struct _SObjList *pModules, int reset_panel, int *Error);"
   "\n",
   "struct _SElException *PLUGIN_SHUTDOWN_NAME_CODE(struct _SPluginArgs *a_pPluginArgs) __declspec(dllexport);"
   "\n",
   "struct _SElException *Printer_Ready_Reset(struct _SSledge *me);"
   "\n",
   "struct _SElException *QueryParameterInt32(struct _STestParam *ppar, int step, const char *name, int *pValue);"
   "\n",
   "struct _SElException *QueryParameterReal64(struct _STestParam *ppar, int step, const char *name, double *pValue);"
   "\n",
   "struct _SElException *QueryParameterString(struct _STestParam *ppar, int step, const char *name, char buffer[], int bufferSize);"
   "\n",
   "struct _SElException *QueryParameterUInt32(struct _STestParam *ppar, int step, const char *name, unsigned int *pValue);"
   "\n",
   "struct _SElException *ReadAnalogWithScale(char *channel, struct _SCalibration *pScaleInfo, double *Value);"
   "\n",
   "void ReadFunction(int portNumber, int eventMask, void *callbackData);"
   "\n",
   "struct _SElException *ReadMasterInformations(const char *pfile_xml, char *description, char *name, char *station);"
   "\n",
   "struct _SElException *ReadMasterResults(const char *pfile_xml);"
   "\n",
   "struct _SElException *ReadTestedResults(CAObjHandle pxml);"
   "\n",
   "void RealTimeWaiting(double time_ms);"
   "\n",
   "struct _SElException *RunTestSequence(const char *fileFormXml, struct _SSledge *me, struct _SAutomat *pAutomat, struct _SElEventFactory *pEventFactory);"
   "\n",
   "void SaveXmlResultFile(struct _STestParam *pTestParam, int failed);"
   "\n",
   "struct _SElException *SetParameterInt32(struct _STestParam *ppar, int step, const char *name, int value);"
   "\n",
   "struct _SElException *SetParameterReal64(struct _STestParam *ppar, int step, const char *name, double value);"
   "\n",
   "struct _SElException *SetParameterString(struct _STestParam *ppar, int step, const char *name, const char *buffer);"
   "\n",
   "struct _SElException *SetParameterUInt32(struct _STestParam *ppar, int step, const char *name, unsigned int value);"
   "\n",
   "struct _SElException *SetSubTestDuration(struct _STestParam *ppar, int step, int index, double duration);"
   "\n",
   "struct _SElException *SetTestDuration(struct _STestParam *ppar, int step, double duration);"
   "\n",
   "struct _SElException *SetTestResult(struct _STestParam *ppar, int step, int index, struct _SElException *pException);"
   "\n",
   "struct _SElException *SetTestSequenceDuration(struct _STestParam *ppar, int mode, double duration);"
   "\n",
   "struct _SElException *SetTestSequenceResult(struct _STestParam *ppar, int mode, struct _SElException *pException);"
   "\n",
   "struct _SElException *SetTestSequenceTime(struct _STestParam *ppar, double duration);"
   "\n",
   "struct _SElException *SetTestSequenceValue(struct _STestParam *ppar, int mode, const char *name, const char *value);"
   "\n",
   "struct _SElException *SetTestUsed(struct _STestParam *ppar, int step);"
   "\n",
   "struct _SElException *SetTestValue(struct _STestParam *ppar, int step, const char *name, const char *value);"
   "\n",
   "struct _SElException *Station_Status(int station, int status);"
   "\n",
   "struct _SElException *StepTestSequence(const char *fileXml, struct _SAutomat *pAutomat, struct _SElEventFactory *pEventFactory, int step_mode, int *is_active, int *last_step);"
   "\n",
   "int ThreadDAQ(void *functionData);"
   "\n",
   "int ThreadDAQ_2(void *functionData);"
   "\n",
   "struct _SElException *ThreadStart(unsigned long (*pThreadFnc)(void *) __attribute__((stdcall)), void *pData, HANDLE *hThread, HANDLE *hStopEvent);"
   "\n",
   "struct _SElException *ThreadStatus(HANDLE hThread, unsigned int timeout, int *pStatus);"
   "\n",
   "struct _SElException *ThreadStop(HANDLE *hThread, HANDLE *hStopEvent);"
   "\n",
   "int Thread_Axis(void *functionData);"
   "\n",
   "unsigned long Thread_Barcode(void *param);"
   "\n",
   "struct _SElException *WaitRotation(int timeout);"
   "\n",
   "int compare(const void *a, const void *b);"
   "\n",
   "struct _SElException *eleventdata_delete(struct _SElEventData **pEventData);"
   "\n",
   "struct _SElException *eleventdata_new(struct _SElEventData **pEventData);"
   "\n",
   "void elexception_delete(struct _SElException **pException);"
   "\n",
   "void elexception_log_set(void (*fn_log)(struct _SElException *));"
   "\n",
   "struct _SElException *elexception_new(int errorCode, const char *messsage, const char *file, long line);"
   "\n",
   "struct _SElException *elstring_delete(struct _SELString **pString);"
   "\n",
   "struct _SElException *elstring_new(const char *pStr, struct _SELString **pString);"
   "\n",
   "void excdisplay(struct _SElException *pException);"
   "\n",
   "void excdispstr(struct _SElException *pException, char *str, int str_size);"
   "\n",
   "struct _SElException *pluginGetAttribute(unsigned int attrID, unsigned int size, void *value) __declspec(dllexport);"
   "\n",
   "struct _SElException *pluginGetInfo(struct _SPluginInfo **a_pInfo) __declspec(dllexport);"
   "\n",
   "struct _SElException *pluginInitialize(struct _SPluginArgs *a_pPluginArgs) __declspec(dllexport);"
   "\n",
   "struct _SElException *pluginLeave(struct _SPluginArgs *a_pPluginArgs, const char *uuid) __declspec(dllexport);"
   "\n",
   "struct _SElException *pluginRun(struct _SPluginArgs *a_pPluginArgs, const char *uuid) __declspec(dllexport);"
   "\n",
   "struct _SElException *sledge_delete(struct _SSledge **pSledge);"
   "\n",
   "struct _SElException *sledge_new(struct _SSledge **pSledge);"
   "\n",
   "struct _SElException *test_delete(struct _STest **pTest);"
   "\n",
   "struct _SElException *test_new(struct _STest **pTest);"
   "\n",
   "struct _SElException *testseq_delete(struct _STestSequence **pTestSeq);"
   "\n",
   "struct _SElException *testseq_new(struct _STestSequence **pTestSequence);"
   "\n",
   "\0"
}

CVIDLLexports2 CVIDLLprototypes
{
}
