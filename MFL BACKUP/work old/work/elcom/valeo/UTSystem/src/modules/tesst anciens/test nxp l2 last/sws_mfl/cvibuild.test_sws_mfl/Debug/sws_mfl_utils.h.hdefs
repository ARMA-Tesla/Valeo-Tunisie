



[iFlag_Thread_Lin_Read]
Class="Var"

[iFlag_Thread_Lin_Write]
Class="Var"

[iFlag_Run_Normal_Mode]
Class="Var"

[ADC_Received]
Class="Var"

[iFlag_Write_Wake_Up]
Class="Var"

[iFlag_Write_Valeo_production_Key]
Class="Var"

[iFlag_Read_Switch_Raw_Values]
Class="Var"

[iFlag_Write_Variant_code]
Class="Var"

[iFlag_Read_Variant_code]
Class="Var"

[iFlag_Read_Valeo_Sw_Revision]
Class="Var"

[iFlag_Write_BMW_Part_Number]
Class="Var"

[iFlag_Write_BMW_SW_Revision]
Class="Var"

[iFlag_Write_BMW_HW_Revision]
Class="Var"

[iFlag_Read_BMW_Part_Number]
Class="Var"

[iFlag_Read_BMW_SW_Revision]
Class="Var"

[iFlag_Read_BMW_HW_Revision]
Class="Var"

[iFlag_Read_Sw_Build_Date]
Class="Var"

[iFlag_Read_MAN_DATA_1]
Class="Var"

[iFlag_Read_MAN_DATA_1_READ_OK]
Class="Var"

[iFlag_Write_MAN_DATA_2]
Class="Var"

[iFlag_Read_MAN_DATA_2]
Class="Var"

[iFlag_Read_MAN_DATA_2_READ_OK]
Class="Var"

[iFlag_Erasing_DTC_Memory_1]
Class="Var"

[iFlag_Erasing_DTC_Memory_2]
Class="Var"

[iFlag_Read_Number_DTC_Memory]
Class="Var"

[iFlag_LED_BG]
Class="Var"

[iFlag_LED_STA_RED]
Class="Var"

[iFlag_LED_STA_GREEN]
Class="Var"

[iFlag_LED_STA_YELLOW]
Class="Var"

[Error_Alive_Byte]
Class="Var"

[iFlag_Delete_Cache]
Class="Var"

[Number_DTC]
Class="Var"

[Status_Push]
Class="Var"

[Value_ADC_Push]
Class="Var"

[Value_ADC_TIP_WHEEL_DOWN_P1]
Class="Var"

[Value_ADC_TIP_WHEEL_DOWN_P10]
Class="Var"

[Value_ADC_TIP_WHEEL_UP_P1]
Class="Var"

[Value_ADC_TIP_WHEEL_UP_P10]
Class="Var"

[Log_Lin]
Class="Var"

[Last_Alive_Byte]
Class="Var"

[first_LIN_Frame]
Class="Var"

[Variant_Code_Read]
Class="Var"

[Variant_Code_Write]
Class="Var"

[Valeo_Sw_Revision]
Class="Var"

[Sw_Build_Date]
Class="Var"

[BMW_Part_Number_Write]
Class="Var"

[BMW_SW_Revision_Write]
Class="Var"

[BMW_HW_Revision_Write]
Class="Var"

[BMW_Part_Number_Read]
Class="Var"

[BMW_SW_Revision_Read]
Class="Var"

[BMW_HW_Revision_Read]
Class="Var"

[MAN_DATA_1_Tracability_EMS_Read]
Class="Var"

[MAN_DATA_1_Serial_Read]
Class="Var"

[MAN_DATA_1_VALEO_Part_Number_Read]
Class="Var"

[MAN_DATA_1_Revision_Index_Read]
Class="Var"

[MAN_DATA_1_LineID_Read]
Class="Var"

[MAN_DATA_1_Production_Year_Read]
Class="Var"

[MAN_DATA_1_Production_Month_Read]
Class="Var"

[MAN_DATA_1_Production_Day_Read]
Class="Var"

[MAN_DATA_1_Production_Batch_Number]
Class="Var"

[MAN_DATA_2_VALEO_Part_Number_Write]
Class="Var"

[MAN_DATA_2_Revision_Index_Write]
Class="Var"

[MAN_DATA_2_LineID_Write]
Class="Var"

[MAN_DATA_2_Production_Year_Write]
Class="Var"

[MAN_DATA_2_Production_Month_Write]
Class="Var"

[MAN_DATA_2_Production_Day_Write]
Class="Var"

[MAN_DATA_2_Serial_Write]
Class="Var"

[MAN_DATA_2_Tracability_MMS_Write]
Class="Var"

[MAN_DATA_2_VALEO_Part_Number_Read]
Class="Var"

[MAN_DATA_2_Revision_Index_Read]
Class="Var"

[MAN_DATA_2_LineID_Read]
Class="Var"

[MAN_DATA_2_Production_Year_Read]
Class="Var"

[MAN_DATA_2_Production_Month_Read]
Class="Var"

[MAN_DATA_2_Production_Day_Read]
Class="Var"

[MAN_DATA_2_Serial_Read]
Class="Var"

[MAN_DATA_2_Tracability_MMS_Read]
Class="Var"

[Offset_Torque_TIPP_WHEEL]
Class="Var"

[Rodage_Pushs_Run]
Class="Var"

[Rodage_Wheels_Run]
Class="Var"

[Test_Torque_Run]
Class="Var"

[Inhibit_Rodage_Pushs]
Class="Var"


































[gLock]
Class="Var"

[NumeroJour]
Class="Function"
Prototype="int NumeroJour(int mois, int jours, int annee);"

[MoveToPush]
Class="Function"
Prototype="struct _SElException *MoveToPush(struct _axis *paxis, struct _STester *ptester, int check, double position_axis_Z, double position_axis_Y, double position_axis_X, const char *PEND_AXIS_Z, const char *PEND_AXIS_Y, const char *PEND_AXIS_X);"

[MoveAxis2]
Class="Function"
Prototype="struct _SElException *MoveAxis2(struct _axis *paxis, int axis, double position, double speed);"

[ElSleep]
Class="Function"
Prototype="void ElSleep(unsigned long time);"

[StopThreads]
Class="Function"
Prototype="void StopThreads(int Station);"

[GetNewSerial]
Class="Function"
Prototype="struct _SElException *GetNewSerial(struct _SDBS *pdbs, int *counter);"

[Write_Traca_MMS_NOK]
Class="Function"
Prototype="int Write_Traca_MMS_NOK(int Station, struct _STestParam *pTestParam);"

[Thread_Aquisition_Force]
Class="Function"
Prototype="unsigned long Thread_Aquisition_Force(void *param);"

[Thread_Aquisition_Torque_TIPP_WIPE]
Class="Function"
Prototype="unsigned long Thread_Aquisition_Torque_TIPP_WIPE(void *param);"

[Thread_Aquisition_Torque_SCROLL_WHEEL]
Class="Function"
Prototype="unsigned long Thread_Aquisition_Torque_SCROLL_WHEEL(void *param);"

[Thread_Phase_Detection_Left]
Class="Function"
Prototype="unsigned long Thread_Phase_Detection_Left(void *param);"

[Thread_Phase_Detection_Right]
Class="Function"
Prototype="unsigned long Thread_Phase_Detection_Right(void *param);"

[Thread_Lin_Read]
Class="Function"
Prototype="unsigned long Thread_Lin_Read(void *param);"

[Thread_Lin_Write]
Class="Function"
Prototype="unsigned long Thread_Lin_Write(void *param);"

[Thread_Reset_Sensor]
Class="Function"
Prototype="unsigned long Thread_Reset_Sensor(void *param);"

[Get_push_value]
Class="Function"
Prototype="int Get_push_value(char *push_name, int station);"

[Get_ADC_push_value]
Class="Function"
Prototype="double Get_ADC_push_value(char *push_name, int station);"

[Thread_Rodage_Wheel_Right]
Class="Function"
Prototype="unsigned long Thread_Rodage_Wheel_Right(void *param);"

[Thread_Rodage_Wheel_Left]
Class="Function"
Prototype="unsigned long Thread_Rodage_Wheel_Left(void *param);"

[getMinDoubleArray]
Class="Function"
Prototype="double getMinDoubleArray(double *Array);"

[getMaxDoubleArray]
Class="Function"
Prototype="double getMaxDoubleArray(double *Array);"

[getMinDoubleArray2]
Class="Function"
Prototype="double getMinDoubleArray2(double *Array);"

[getMaxDoubleArray2]
Class="Function"
Prototype="double getMaxDoubleArray2(double *Array);"

[SaveGraphPNG]
Class="Function"
Prototype="void SaveGraphPNG(int PanelHandle, int ControleHandle, char *PathNamePNG);"

[MathFunction30]
Class="Function"
Prototype="void MathFunction30(double sdWaveGes[3][12000], int length, double *_dmF1V, double *_dmS1V, double *_dmF2V, double *_dmS2V, double *_dmF_END, double *_dmS_END, double *_dmF1R, double *_dmS1R, double *_dmF2R, double *_dmS2R);"

[Moyenne_Glissante_Courbe_30]
Class="Function"
Prototype="void Moyenne_Glissante_Courbe_30(double sdWaveGes[12000], int length);"

[Ajustement_Gain_Offset_30]
Class="Function"
Prototype="struct _SElException *Ajustement_Gain_Offset_30(char *Function, double *dmF1, double *dmF2, double *dmS3);"

[MathFunction40]
Class="Function"
Prototype="void MathFunction40(double sdWaveGes[3][12000], int length, double *_dmF1V, double *_dmS1V, double *_dmF2V, double *_dmS2V, double *_dmF_END, double *_dmS_END, double *_dmF1R, double *_dmS1R, double *_dmF2R, double *_dmS2R);"

[Moyenne_Glissante_Courbe_40]
Class="Function"
Prototype="void Moyenne_Glissante_Courbe_40(double sdWaveGes[12000], int length);"

[AnalysisFunction]
Class="Function"
Prototype="void AnalysisFunction(double sdWaveGes[3][12000], int length, double *_dmF1V, double *_dmS1V, double *_dmF2V, double *_dmS2V, double *_dmF_END, double *_dmS_END, double *_dmF1R, double *_dmS1R, double *_dmF2R, double *_dmS2R);"

[Ajustement_Gain_Offset_40]
Class="Function"
Prototype="struct _SElException *Ajustement_Gain_Offset_40(char *Function, double *dmF1, double *dmF2, double *dmS3);"

[MathFunction2]
Class="Function"
Prototype="void MathFunction2(double sdWaveGes[3][12000], int length, double *_dmF1V, double *_dmS1V, double *_dmF2V, double *_dmS2V, double *_dmF3V, double *_dmS3V, double *_dmF4V, double *_dmS4V, double *_dmF5V, double *_dmS5V);"

[Filter_Table]
Class="Function"
Prototype="void Filter_Table(double *data, int size);"

[CheckDirectory]
Class="Function"
Prototype="struct _SElException *CheckDirectory(const char *directory);"

